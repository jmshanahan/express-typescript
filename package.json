{
  "name": "search-api",
  "version": "1.0.0",
  "description": "This is a tutorial from ITNEXT Production ready Node.js REST API Setup using Typescript PostgreSQL and Redis",
  "main": "index.js",
  "scripts": {
    "dev": "tsc-watch --onSuccess \"node ./dist/server.js\"",
    "test": "jest --coverage --verbose"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@types/compression": "^1.0.1",
    "@types/cors": "^2.8.6",
    "@types/dotenv": "^8.2.0",
    "@types/express": "^4.17.1",
    "@types/node": "^12.11.7",
    "@types/request-promise": "^4.1.44",
    "@types/supertest": "^2.0.8",
    "@types/swagger-ui-express": "^3.0.1",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^8.2.0",
    "express": "^5.0.0-alpha.7",
    "request": "^2.88.0",
    "request-promise": "^4.2.4",
    "supertest": "^4.0.2",
    "swagger-ui-express": "^4.1.2",
    "tsc-watch": "^4.0.0",
    "typescript": "^3.6.4"
  },
  "devDependencies": {
    "@types/jest": "^24.0.21",
    "jest": "^24.9.0",
    "ts-jest": "^24.1.0"
  },
  "jest": {
    "verbose": true,
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jmshanahan/express-typescript.git"
  },
  "bugs": {
    "url": "https://github.com/jmshanahan/express-typescript/issues"
  },
  "homepage": "https://github.com/jmshanahan/express-typescript#readme"
}
